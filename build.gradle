plugins {
  id 'java'
  id 'org.springframework.boot' version '3.3.3'
  id 'io.spring.dependency-management' version '1.1.6'
  id 'org.hibernate.orm' version '6.5.2.Final'
  id 'org.graalvm.buildtools.native' version '0.10.2'
  id 'com.diffplug.spotless' version '6.20.0'
}

group = 'io.ceze'
version = '0.0.1-SNAPSHOT'

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(21)
  }
}

ext {
  set('springModulithVersion', "1.2.3")
}

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
  mavenCentral()
}

dependencies {
  implementation 'org.springframework.modulith:spring-modulith-starter-core'
  implementation 'org.springframework.boot:spring-boot-starter-actuator'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
  implementation 'org.springframework.boot:spring-boot-starter-security'
  implementation 'org.springframework.boot:spring-boot-starter-validation'
  implementation 'org.springframework.boot:spring-boot-starter-web'
  developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
  runtimeOnly 'org.postgresql:postgresql'
  annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.springframework.boot:spring-boot-testcontainers'
  testImplementation 'org.springframework.security:spring-security-test'
  testImplementation 'org.testcontainers:junit-jupiter'
  testImplementation 'org.testcontainers:postgresql'
  testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
  testImplementation 'org.flywaydb:flyway-core:10.10.0'
  testImplementation 'org.flywaydb:flyway-database-postgresql:10.10.0'
}

dependencyManagement {
  imports {
    mavenBom "org.springframework.modulith:spring-modulith-bom:${springModulithVersion}"
  }
}

hibernate {
  enhancement {
    enableAssociationManagement = true
  }
}

tasks.named('test') {
  useJUnitPlatform()
}


spotless {
  java {
    importOrderFile('gradle/import.properties')
    removeUnusedImports()
    target 'src/*/java/**/*.java'
    ratchetFrom("origin/main")
    licenseHeaderFile("gradle/spotless.java.license.txt")
    palantirJavaFormat('2.39.0').style('GOOGLE')
    trimTrailingWhitespace()
    endWithNewline()
    formatAnnotations()
    toggleOffOn()
  }

  groovyGradle {
    target fileTree('.') {
      include '**/*.gradle'
      exclude '**/build/**'
    }

    greclipse()
    indentWithSpaces(2)
    trimTrailingWhitespace()
    endWithNewline()
  }
}
