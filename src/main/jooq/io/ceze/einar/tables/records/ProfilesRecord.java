/*
 * This file is generated by jOOQ.
 */
package io.ceze.einar.tables.records;


import io.ceze.einar.tables.Profiles;

import java.time.LocalDate;
import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProfilesRecord extends UpdatableRecordImpl<ProfilesRecord> implements Record8<Long, Long, Long, String, String, LocalDate, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.profiles.profile_id</code>.
     */
    public void setProfileId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.profiles.profile_id</code>.
     */
    public Long getProfileId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.profiles.user_id</code>.
     */
    public void setUserId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.profiles.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.profiles.location_id</code>.
     */
    public void setLocationId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.profiles.location_id</code>.
     */
    public Long getLocationId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>public.profiles.first_name</code>.
     */
    public void setFirstName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.profiles.first_name</code>.
     */
    public String getFirstName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.profiles.last_name</code>.
     */
    public void setLastName(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.profiles.last_name</code>.
     */
    public String getLastName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.profiles.dob</code>.
     */
    public void setDob(LocalDate value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.profiles.dob</code>.
     */
    public LocalDate getDob() {
        return (LocalDate) get(5);
    }

    /**
     * Setter for <code>public.profiles.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.profiles.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>public.profiles.last_modified</code>.
     */
    public void setLastModified(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.profiles.last_modified</code>.
     */
    public LocalDateTime getLastModified() {
        return (LocalDateTime) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, Long, Long, String, String, LocalDate, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Long, Long, Long, String, String, LocalDate, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Profiles.PROFILES.PROFILE_ID;
    }

    @Override
    public Field<Long> field2() {
        return Profiles.PROFILES.USER_ID;
    }

    @Override
    public Field<Long> field3() {
        return Profiles.PROFILES.LOCATION_ID;
    }

    @Override
    public Field<String> field4() {
        return Profiles.PROFILES.FIRST_NAME;
    }

    @Override
    public Field<String> field5() {
        return Profiles.PROFILES.LAST_NAME;
    }

    @Override
    public Field<LocalDate> field6() {
        return Profiles.PROFILES.DOB;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return Profiles.PROFILES.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return Profiles.PROFILES.LAST_MODIFIED;
    }

    @Override
    public Long component1() {
        return getProfileId();
    }

    @Override
    public Long component2() {
        return getUserId();
    }

    @Override
    public Long component3() {
        return getLocationId();
    }

    @Override
    public String component4() {
        return getFirstName();
    }

    @Override
    public String component5() {
        return getLastName();
    }

    @Override
    public LocalDate component6() {
        return getDob();
    }

    @Override
    public LocalDateTime component7() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component8() {
        return getLastModified();
    }

    @Override
    public Long value1() {
        return getProfileId();
    }

    @Override
    public Long value2() {
        return getUserId();
    }

    @Override
    public Long value3() {
        return getLocationId();
    }

    @Override
    public String value4() {
        return getFirstName();
    }

    @Override
    public String value5() {
        return getLastName();
    }

    @Override
    public LocalDate value6() {
        return getDob();
    }

    @Override
    public LocalDateTime value7() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value8() {
        return getLastModified();
    }

    @Override
    public ProfilesRecord value1(Long value) {
        setProfileId(value);
        return this;
    }

    @Override
    public ProfilesRecord value2(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public ProfilesRecord value3(Long value) {
        setLocationId(value);
        return this;
    }

    @Override
    public ProfilesRecord value4(String value) {
        setFirstName(value);
        return this;
    }

    @Override
    public ProfilesRecord value5(String value) {
        setLastName(value);
        return this;
    }

    @Override
    public ProfilesRecord value6(LocalDate value) {
        setDob(value);
        return this;
    }

    @Override
    public ProfilesRecord value7(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public ProfilesRecord value8(LocalDateTime value) {
        setLastModified(value);
        return this;
    }

    @Override
    public ProfilesRecord values(Long value1, Long value2, Long value3, String value4, String value5, LocalDate value6, LocalDateTime value7, LocalDateTime value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProfilesRecord
     */
    public ProfilesRecord() {
        super(Profiles.PROFILES);
    }

    /**
     * Create a detached, initialised ProfilesRecord
     */
    public ProfilesRecord(Long profileId, Long userId, Long locationId, String firstName, String lastName, LocalDate dob, LocalDateTime createdAt, LocalDateTime lastModified) {
        super(Profiles.PROFILES);

        setProfileId(profileId);
        setUserId(userId);
        setLocationId(locationId);
        setFirstName(firstName);
        setLastName(lastName);
        setDob(dob);
        setCreatedAt(createdAt);
        setLastModified(lastModified);
        resetChangedOnNotNull();
    }
}
