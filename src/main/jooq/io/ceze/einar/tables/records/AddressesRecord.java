/*
 * This file is generated by jOOQ.
 */
package io.ceze.einar.tables.records;


import io.ceze.einar.tables.Addresses;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AddressesRecord extends UpdatableRecordImpl<AddressesRecord> implements Record9<Integer, Integer, String, String, String, String, String, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.addresses.addr_id</code>.
     */
    public void setAddrId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.addresses.addr_id</code>.
     */
    public Integer getAddrId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.addresses.addr_num</code>.
     */
    public void setAddrNum(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.addresses.addr_num</code>.
     */
    public Integer getAddrNum() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.addresses.street</code>.
     */
    public void setStreet(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.addresses.street</code>.
     */
    public String getStreet() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.addresses.city</code>.
     */
    public void setCity(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.addresses.city</code>.
     */
    public String getCity() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.addresses.state</code>.
     */
    public void setState(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.addresses.state</code>.
     */
    public String getState() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.addresses.postal_code</code>.
     */
    public void setPostalCode(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.addresses.postal_code</code>.
     */
    public String getPostalCode() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.addresses.country</code>.
     */
    public void setCountry(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.addresses.country</code>.
     */
    public String getCountry() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.addresses.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.addresses.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(7);
    }

    /**
     * Setter for <code>public.addresses.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.addresses.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Integer, Integer, String, String, String, String, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Integer, Integer, String, String, String, String, String, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Addresses.ADDRESSES.ADDR_ID;
    }

    @Override
    public Field<Integer> field2() {
        return Addresses.ADDRESSES.ADDR_NUM;
    }

    @Override
    public Field<String> field3() {
        return Addresses.ADDRESSES.STREET;
    }

    @Override
    public Field<String> field4() {
        return Addresses.ADDRESSES.CITY;
    }

    @Override
    public Field<String> field5() {
        return Addresses.ADDRESSES.STATE;
    }

    @Override
    public Field<String> field6() {
        return Addresses.ADDRESSES.POSTAL_CODE;
    }

    @Override
    public Field<String> field7() {
        return Addresses.ADDRESSES.COUNTRY;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return Addresses.ADDRESSES.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field9() {
        return Addresses.ADDRESSES.UPDATED_AT;
    }

    @Override
    public Integer component1() {
        return getAddrId();
    }

    @Override
    public Integer component2() {
        return getAddrNum();
    }

    @Override
    public String component3() {
        return getStreet();
    }

    @Override
    public String component4() {
        return getCity();
    }

    @Override
    public String component5() {
        return getState();
    }

    @Override
    public String component6() {
        return getPostalCode();
    }

    @Override
    public String component7() {
        return getCountry();
    }

    @Override
    public LocalDateTime component8() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component9() {
        return getUpdatedAt();
    }

    @Override
    public Integer value1() {
        return getAddrId();
    }

    @Override
    public Integer value2() {
        return getAddrNum();
    }

    @Override
    public String value3() {
        return getStreet();
    }

    @Override
    public String value4() {
        return getCity();
    }

    @Override
    public String value5() {
        return getState();
    }

    @Override
    public String value6() {
        return getPostalCode();
    }

    @Override
    public String value7() {
        return getCountry();
    }

    @Override
    public LocalDateTime value8() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value9() {
        return getUpdatedAt();
    }

    @Override
    public AddressesRecord value1(Integer value) {
        setAddrId(value);
        return this;
    }

    @Override
    public AddressesRecord value2(Integer value) {
        setAddrNum(value);
        return this;
    }

    @Override
    public AddressesRecord value3(String value) {
        setStreet(value);
        return this;
    }

    @Override
    public AddressesRecord value4(String value) {
        setCity(value);
        return this;
    }

    @Override
    public AddressesRecord value5(String value) {
        setState(value);
        return this;
    }

    @Override
    public AddressesRecord value6(String value) {
        setPostalCode(value);
        return this;
    }

    @Override
    public AddressesRecord value7(String value) {
        setCountry(value);
        return this;
    }

    @Override
    public AddressesRecord value8(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public AddressesRecord value9(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public AddressesRecord values(Integer value1, Integer value2, String value3, String value4, String value5, String value6, String value7, LocalDateTime value8, LocalDateTime value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AddressesRecord
     */
    public AddressesRecord() {
        super(Addresses.ADDRESSES);
    }

    /**
     * Create a detached, initialised AddressesRecord
     */
    public AddressesRecord(Integer addrId, Integer addrNum, String street, String city, String state, String postalCode, String country, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(Addresses.ADDRESSES);

        setAddrId(addrId);
        setAddrNum(addrNum);
        setStreet(street);
        setCity(city);
        setState(state);
        setPostalCode(postalCode);
        setCountry(country);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        resetChangedOnNotNull();
    }
}
