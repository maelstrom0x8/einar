/*
 * This file is generated by jOOQ.
 */
package io.ceze.einar.tables.records;


import io.ceze.einar.tables.Locations;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LocationsRecord extends UpdatableRecordImpl<LocationsRecord> implements Record8<Long, Integer, String, String, String, String, String, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.locations.location_id</code>.
     */
    public void setLocationId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.locations.location_id</code>.
     */
    public Long getLocationId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.locations.street_no</code>.
     */
    public void setStreetNo(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.locations.street_no</code>.
     */
    public Integer getStreetNo() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.locations.street_name</code>.
     */
    public void setStreetName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.locations.street_name</code>.
     */
    public String getStreetName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.locations.city</code>.
     */
    public void setCity(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.locations.city</code>.
     */
    public String getCity() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.locations.state</code>.
     */
    public void setState(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.locations.state</code>.
     */
    public String getState() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.locations.postal_code</code>.
     */
    public void setPostalCode(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.locations.postal_code</code>.
     */
    public String getPostalCode() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.locations.country</code>.
     */
    public void setCountry(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.locations.country</code>.
     */
    public String getCountry() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.locations.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.locations.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, Integer, String, String, String, String, String, LocalDateTime> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Long, Integer, String, String, String, String, String, LocalDateTime> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Locations.LOCATIONS.LOCATION_ID;
    }

    @Override
    public Field<Integer> field2() {
        return Locations.LOCATIONS.STREET_NO;
    }

    @Override
    public Field<String> field3() {
        return Locations.LOCATIONS.STREET_NAME;
    }

    @Override
    public Field<String> field4() {
        return Locations.LOCATIONS.CITY;
    }

    @Override
    public Field<String> field5() {
        return Locations.LOCATIONS.STATE;
    }

    @Override
    public Field<String> field6() {
        return Locations.LOCATIONS.POSTAL_CODE;
    }

    @Override
    public Field<String> field7() {
        return Locations.LOCATIONS.COUNTRY;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return Locations.LOCATIONS.CREATED_AT;
    }

    @Override
    public Long component1() {
        return getLocationId();
    }

    @Override
    public Integer component2() {
        return getStreetNo();
    }

    @Override
    public String component3() {
        return getStreetName();
    }

    @Override
    public String component4() {
        return getCity();
    }

    @Override
    public String component5() {
        return getState();
    }

    @Override
    public String component6() {
        return getPostalCode();
    }

    @Override
    public String component7() {
        return getCountry();
    }

    @Override
    public LocalDateTime component8() {
        return getCreatedAt();
    }

    @Override
    public Long value1() {
        return getLocationId();
    }

    @Override
    public Integer value2() {
        return getStreetNo();
    }

    @Override
    public String value3() {
        return getStreetName();
    }

    @Override
    public String value4() {
        return getCity();
    }

    @Override
    public String value5() {
        return getState();
    }

    @Override
    public String value6() {
        return getPostalCode();
    }

    @Override
    public String value7() {
        return getCountry();
    }

    @Override
    public LocalDateTime value8() {
        return getCreatedAt();
    }

    @Override
    public LocationsRecord value1(Long value) {
        setLocationId(value);
        return this;
    }

    @Override
    public LocationsRecord value2(Integer value) {
        setStreetNo(value);
        return this;
    }

    @Override
    public LocationsRecord value3(String value) {
        setStreetName(value);
        return this;
    }

    @Override
    public LocationsRecord value4(String value) {
        setCity(value);
        return this;
    }

    @Override
    public LocationsRecord value5(String value) {
        setState(value);
        return this;
    }

    @Override
    public LocationsRecord value6(String value) {
        setPostalCode(value);
        return this;
    }

    @Override
    public LocationsRecord value7(String value) {
        setCountry(value);
        return this;
    }

    @Override
    public LocationsRecord value8(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public LocationsRecord values(Long value1, Integer value2, String value3, String value4, String value5, String value6, String value7, LocalDateTime value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LocationsRecord
     */
    public LocationsRecord() {
        super(Locations.LOCATIONS);
    }

    /**
     * Create a detached, initialised LocationsRecord
     */
    public LocationsRecord(Long locationId, Integer streetNo, String streetName, String city, String state, String postalCode, String country, LocalDateTime createdAt) {
        super(Locations.LOCATIONS);

        setLocationId(locationId);
        setStreetNo(streetNo);
        setStreetName(streetName);
        setCity(city);
        setState(state);
        setPostalCode(postalCode);
        setCountry(country);
        setCreatedAt(createdAt);
        resetChangedOnNotNull();
    }
}
